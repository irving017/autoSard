
<style>



.papa{
 width: 100%;
  padding: 30px;
  background-color: #CCD7E4;
  display:flex;
  flex-direction: column;
  align-items: center;
  
}
.cart{
  width: 70vw;
  margin-left: 300px;


}

.cart input{
  border-radius:5px; 
}

.mapa{
  margin: 30px 0;
  border-radius: 15px;
}

h2{
  margin: 20px 0;
}

.papa2 input {
  border-radius: 5px;
}

</style>


 <center><h2>Registra tu viaje!</h2>
 <div class="papa2" >
    <form action="/profile/route/new" method="POST">
<p>
Salida:
<input type="text" name="start[address]" id="start">
<input type="text" name="start[coordinates][1]" id="lats" hidden="true">
<input type="text" name="start[coordinates][0]" id="lngs" hidden="true">
Destino: 
<input type="text" name="destiny[address]" id="end">
<input type="text" name="destiny[coordinates][1]" id="latd" hidden="true">
<input type="text" name="destiny[coordinates][0]" id="lngd" hidden="true">
</p> 
</center> 
 <center><div class="mapa" style="width:80%; height:300px;" id="map"></div></center> 
 <div class="papa" >
   
  <div class="cart" >
  <p>
    Horario:
    <input type="time" name="time" id="horario">
  </p>
  <p>
    Asientos disponibles:
    <input min='1' max="3" type="number" name="seats" id="asientos">
  </p>
  <p>
    Tiempo de espera maximo(min):
    <input min='0' max="10" type="number" name="TE" id="TE">
  </p>
  <input  class="btn btn-primary" type="submit" value="Registrar">
  </div>

</div>
</form>
 </div>
 





<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDIstIL_VA1Z_tPaYLKg2CvMG1sz6V0ywY&libraries=places"></script>
<script>
  let actual = {}
  if(navigator.geolocation){
    navigator.geolocation.getCurrentPosition(function(p){
      actual = {lat:p.coords.latitude, lng:p.coords.longitude}
    })
  }
  /*function initMap() {
    var directionsService = new google.maps.DirectionsService;
    var directionsDisplay = new google.maps.DirectionsRenderer;
    var map = new google.maps.Map(document.getElementById('map'), {
      zoom: 17,
      center: {lat: 19.39776549999999, lng: -99.1713954}
    });
    directionsDisplay.setMap(map);

    var onChangeHandler = function() {
      calculateAndDisplayRoute(directionsService, directionsDisplay);
    };
    document.getElementById('start').addEventListener('change', onChangeHandler);
    document.getElementById('end').addEventListener('change', onChangeHandler);
  }*/

  let lats = document.getElementById('lats')
  let lngs = document.getElementById('lngs')
  let latd = document.getElementById('latd')
  let lngd = document.getElementById('lngd')

  /*function calculateAndDisplayRoute(directionsService, directionsDisplay) {
    directionsService.route({
      //origin: {lat:parseFloat(lats.value), lng:parseFloat(lngs.value)},
      origin: google.maps.Place
      destination: {lat:parseFloat(latd.value),lng:parseFloat(lngd.value)},
      travelMode: 'DRIVING'
    }, 
    function(response, status) {
      if (status === 'OK') {
      directionsDisplay.setDirections(response);
      } else {
      window.alert('Directions request failed due to ' + status);
      }
    });
  }
  function autoComplete(ainput, latInp, lngInp){
    const dropdown = new google.maps.places.Autocomplete(ainput)
    dropdown.addListener('place_changed',()=>{
      const place = dropdown.getPlace()
      latInp.value= place.geometry.location.lat()
      lngInp.value= place.geometry.location.lng()
    })
  }*/

 function initMap() {
    const map = new google.maps.Map(document.getElementById('map'), {
      mapTypeControl: false,
      center: {lat: 19.39776549999999, lng:-99.1713954},
      zoom: 17
    });
    new AutocompleteDirectionsHandler(map);
  }
  function AutocompleteDirectionsHandler(map) {
    //constructor
    this.map = map;
    this.originPlaceId = null;
    this.destinationPlaceId = null;
    this.travelMode = 'DRIVING';
    const originInput = document.getElementById('start');
    const destinationInput = document.getElementById('end');
    this.directionsService = new google.maps.DirectionsService;
    this.directionsDisplay = new google.maps.DirectionsRenderer;
    this.directionsDisplay.setMap(map);
    const originAutocomplete = new google.maps.places.Autocomplete(
      originInput,lats,lngs);
    const destinationAutocomplete = new google.maps.places.Autocomplete(
      destinationInput,latd,lngd);
    this.setupPlaceChangedListener(originAutocomplete, 'ORIG');
    this.setupPlaceChangedListener(destinationAutocomplete, 'DEST');
  }
  AutocompleteDirectionsHandler.prototype.setupClickListener = function(id) {
    var me = this;
    me.route();
  };
  AutocompleteDirectionsHandler.prototype.setupPlaceChangedListener = function(autocomplete, mode) {
    var me = this;
    autocomplete.bindTo('bounds', this.map);
    autocomplete.addListener('place_changed', function() {
    var place = autocomplete.getPlace();
    if (!place.place_id) {
      window.alert("Please select an option from the dropdown list.");
      return;
    }
    if (mode === 'ORIG') {
      me.originPlaceId = place.place_id;
      lats.value=place.geometry.location.lat()
      lngs.value=place.geometry.location.lng()
    }else{
      me.destinationPlaceId = place.place_id;
      latd.value=place.geometry.location.lat()
      lngd.value=place.geometry.location.lng()
    }
      me.route();
    });
  };
  AutocompleteDirectionsHandler.prototype.route = function() {
    if (!this.originPlaceId || !this.destinationPlaceId) {
      return;
    }
    var me = this;
    this.directionsService.route({
      origin: {'placeId': this.originPlaceId},
      destination: {'placeId': this.destinationPlaceId},
      travelMode: this.travelMode
    }, function(response, status) {
        if (status === 'OK') {
          me.directionsDisplay.setDirections(response);
        }else{
          window.alert('Directions request failed due to ' + status);
        }
      });
  };
  initMap()
</script>

